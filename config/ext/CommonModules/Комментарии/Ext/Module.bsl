
&Вместо("Добавить")
Функция РСК_Добавить(Знач ВладелецКомментария, Знач ПараметрыКомментария)
	
	ТекстHTML				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ТекстСообщения", "");
	ДатаСообщения			= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ДатаСообщения", ТекущаяДатаСеанса());
	АвторСообщения			= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"Автор", Справочники.Пользователи.ПустаяСсылка());
	ПриватныйКомментарий	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ПриватныйКомментарий", Ложь);
//	УведомлятьНаблюдателей	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
//		"УведомлятьНаблюдателей", Истина);
	ИдентификаторСообщения	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ИдентификаторСообщения", "");
	ЗаголовокСообщения		= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ЗаголовокСообщения", "");
	ПриложенныеФайлы		= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"ПриложенныеФайлы", Новый Массив);
	
//	ДобавленоРегламентнымЗаданием 	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария,
//		"ДобавленоРегламентнымЗаданием", Ложь);
	УчетнаяЗаписьЭлектроннойПочты 	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"УчетнаяЗаписьЭлектроннойПочты", Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка());
	КомментарийРодитель             = УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыКомментария, 
		"КомментарийРодитель", Справочники.Комментарии.ПустаяСсылка());
	
	НеобходимостьЗаписиЗадания		= Ложь;
	Если ТипЗнч(ВладелецКомментария)= Тип("ДокументСсылка.Задание") Тогда
		Объект						= ВладелецКомментария.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(ВладелецКомментария)= Тип("ДокументОбъект.Задание") Тогда
		Объект						= ВладелецКомментария;
	Иначе
		Объект						= Неопределено;
	КонецЕсли;
	
	Если Объект <> Неопределено Тогда
	                                                              
		#Область УстановкаЗакрытияЗадачиИзТекста
		
		// Проверяем надо ли закрыть сообщение.
		МассивМаркеровВыполнения 	= УправлениеITОтделом8УФПовтИсп.МассивМаркеровВыполнения();
		ТекстНижнийРегистр 		= НРег(ТекстHTML);
		ЗакрытьЗадание			= Ложь;
		Для Каждого Маркер Из МассивМаркеровВыполнения Цикл
			Позиция = СтрНайти(ТекстНижнийРегистр, НРег(Маркер));
			Если Позиция > 0 Тогда
				// Удаляем строку с маркером закрытия задания.
				ТекстHTML = Лев(ТекстHTML, Позиция - 1) + Сред(ТекстHTML, Позиция + СтрДлина(Маркер));
				ЗакрытьЗадание = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		
		Если ЗакрытьЗадание И ЗначениеЗаполнено(Объект.Процесс) Тогда
			
			Если ЗначениеЗаполнено(Объект.Процесс.АвтоматическоеВыполнениеЗаданияЭтап) Тогда
				Объект.ТекущийЭтап		= Объект.Процесс.АвтоматическоеВыполнениеЗаданияЭтап;			
			КонецЕсли;
			Объект.Выполнено			= Истина;
			Объект.ПроцентВыполнения	= 100;
			
			ЗаголовокСообщения 				= ЗаголовокСообщения + " " + НСтр("ru = 'Задача выполнена.'");
			НеобходимостьЗаписиЗадания		= Истина;
			
		КонецЕсли;
	
		#КонецОбласти
		
	#Область ПовторноеОткрытие 
	
	//Пашков - Закоментил т.к. этап возобновлено не используется.
	// Если сообщение не от текущего исполнителя задания, то задание не выполнено.
	//Если НЕ ЗаданияСервер.ПроверитьТекущийИсполнительЗадания(Объект, АвторСообщения) Тогда

	//	Если Объект.Выполнено = Истина И ЗакрытьЗадание = Ложь И (Объект.Завершено = ЛОЖЬ 
	//		ИЛИ УправлениеITОтделом8УФПовтИсп.ПолучитьКонстанту("ИзменятьЗавершенныеЗадания")) Тогда
	//		
	//		Объект.Выполнено 			= Ложь;
	//		Объект.Завершено 			= Ложь;
	//		Объект.ПроцентВыполнения 	= 0;	
	//		Объект.ОценкаВыполнения 	= Справочники.ОценкиЗаданий.ПовторноеОткрытие;
	//		Объект.ТекущийЭтап			= Справочники.ЭтапыПроцессов.Возобновлено;
	//		ЗаголовокСообщения 			= ЗаголовокСообщения + " " + НСтр("ru = 'Задача повторно открыта.'");
	//		НеобходимостьЗаписиЗадания	= Истина;
	//					
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
	#КонецОбласти
	
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		// Получаем записываемый UID
		UID 		= Новый УникальныйИдентификатор();
		НоваяСсылка = Справочники.Комментарии.ПолучитьСсылку(UID);
		
		// Добавляем вложения.
		Для Каждого Файл Из ПриложенныеФайлы Цикл
			
			Если ТипЗнч(Файл) = Тип("Структура") Тогда
				
				ПараметрыФайла = Новый Структура;
				ПараметрыФайла.Вставить("Автор", 						Файл.Автор);
				ПараметрыФайла.Вставить("ВладелецФайлов", 				НоваяСсылка);
				ПараметрыФайла.Вставить("ИмяБезРасширения", 			Файл.ИмяБезРасширения);
				ПараметрыФайла.Вставить("РасширениеБезТочки", 			Файл.РасширениеБезТочки);
				ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", 	ТекущаяУниверсальнаяДата());
				РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, Файл.Адрес);
				УдалитьИзВременногоХранилища(Файл.Адрес);
				
			Иначе
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("ПолучатьСсылкуНаДвоичныеДанные", Истина);
				ДанныеФайла = РаботаСФайлами.ДанныеФайла(Файл.Ссылка, ДополнительныеПараметры);
				
				ПараметрыФайла = РаботаСФайлами.ПараметрыДобавленияФайла();
				ПараметрыФайла.ВладелецФайлов = НоваяСсылка;
				ПараметрыФайла.ИмяБезРасширения = ДанныеФайла.Наименование;
				ПараметрыФайла.РасширениеБезТочки = ДанныеФайла.Расширение;
				ПараметрыФайла.ВремяИзмененияУниверсальное = Неопределено;
				
				ДобавленныйФайлСсылка = РаботаСФайлами.ДобавитьФайл(
					ПараметрыФайла,
					ДанныеФайла.СсылкаНаДвоичныеДанныеФайла,
					"");
				
                Если НЕ ПустаяСтрока(Файл.ИДФайлаЭлектронногоПисьма) Тогда
                    ДобавленныйФайл 							= ДобавленныйФайлСсылка.ПолучитьОбъект();
                    ДобавленныйФайл.ИДФайлаЭлектронногоПисьма 	= Файл.ИДФайлаЭлектронногоПисьма;
                    ДобавленныйФайл.Записать();
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		// Добавляем сообщение.
		НовоеСообщение							= Справочники.Комментарии.СоздатьЭлемент();
		НовоеСообщение.УстановитьСсылкуНового(НоваяСсылка);
		НовоеСообщение.ВладелецКомментария		= ВладелецКомментария;
		НовоеСообщение.Автор					= АвторСообщения;
		НовоеСообщение.Период					= ДатаСообщения;
		НовоеСообщение.Приватный				= ПриватныйКомментарий;
		НовоеСообщение.ИдентификаторСообщения	= ИдентификаторСообщения;
		НовоеСообщение.Заголовок				= СокрЛП(ЗаголовокСообщения);
		НовоеСообщение.ТекстHTML				= ТекстHTML;
		НовоеСообщение.Текст					= Взаимодействия.ПолучитьОбычныйТекстИзHTML(ТекстHTML);
		НовоеСообщение.УчетнаяЗаписьЭлектроннойПочты = УчетнаяЗаписьЭлектроннойПочты;
		
		Если ТипЗнч(ВладелецКомментария) = Тип("ДокументСсылка.Задание") Тогда
			МассивНеУведомляемых = Новый Массив;
			МассивНеУведомляемых.Добавить(АвторСообщения);
			НовоеСообщение.ДополнительныеСвойства.Вставить("МассивНеУведомляемых", МассивНеУведомляемых);			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КомментарийРодитель) Тогда
			Если КомментарийРодитель.Приватный = Истина Тогда
				НовоеСообщение.Приватный = Истина;
				Для Каждого СтрокаАдресат Из КомментарийРодитель.Адресаты Цикл
					НоваяСтрока = НовоеСообщение.Адресаты.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаАдресат); 
				КонецЦикла;					
			КонецЕсли;	
		КонецЕсли;	
		
		НовоеСообщение.Записать();	
		
		Если ЗначениеЗаполнено(КомментарийРодитель) Тогда
			РегистрыСведений.СвязьКомментариев.УстановитьСвязь(КомментарийРодитель, НовоеСообщение.Ссылка);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
        
        ОтменитьТранзакцию();
		НовоеСообщение = Неопределено;		                                                                     
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка добавления комментария'"), УровеньЖурналаРегистрации.Ошибка,,,
			СтрШаблон(НСтр("ru = 'Ошибка при добавлении комментария: %1'"), 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			
		Возврат НовоеСообщение;
			
	КонецПопытки;
		
	// Работа с комментарием в соответствии 
	Если НеобходимостьЗаписиЗадания = Истина И Объект <> Неопределено Тогда
				
		Попытка
			Объект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка установки реквизитов задания при добавлении комментария'"), 
				УровеньЖурналаРегистрации.Ошибка,,, 
				СтрШаблон(НСтр("ru = 'Ошибка записи: %1'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат НовоеСообщение.Ссылка;
	
КонецФункции
