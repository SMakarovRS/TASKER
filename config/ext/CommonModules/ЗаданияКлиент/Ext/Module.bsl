
&Вместо("ПеревестиЗаданиеНаЭтап")
Функция РСК_ПеревестиЗаданиеНаЭтап(ДокументЗадание, Знач ПараметрыСтруктура)
	
	СтруктураВозврата	 = Новый Структура();
	СтруктураВозврата.Вставить("ВыполненПеревод", Ложь);
	
	НовыйЭтап 			 				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, 
		"НовыйЭтап", ПредопределенноеЗначение("Справочник.ЭтапыПроцессов.ПустаяСсылка"));
	НеПроверятьПроцесс	 				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "НеПроверятьПроцесс", Ложь);
	ВвестиКомментарийПриПереходеНаЭтап	= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, 
		"ВвестиКомментарийПриПереходеНаЭтап", Ложь);
	ДатаАктуальности	 				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, 
		"ДатаАктуальности", ОбщегоНазначенияКлиент.ДатаСеанса());
	ЭтоВебКлиент		 				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "ЭтоВебКлиент", 		Ложь);
	Источник			 				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "Источник", 			"");		
	ПереданаСсылка	 					= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "ПереданаСсылка", 	Ложь);	
	ЭтоФормаПереводаНаЭтап				= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "ФормаПереводаНаЭтап",Ложь);	
	ДокументСсылка 		 				= ?(ПереданаСсылка, ДокументЗадание, ПараметрыСтруктура.Ссылка);
	
	ПроверятьПодчиненныеЗадания			= УправлениеITОтделом8УФ.ПолучитьПараметр(ПараметрыСтруктура, "ПроверятьПодчиненныеЗадания", Истина);
		
	Если ПереданаСсылка Тогда
		СтруктураПриПереходе = ЗаданияСервер.ПолучитьСтруктуруПриПереходеЗаданияНаЭтап(ДокументСсылка, НовыйЭтап,
			НеПроверятьПроцесс);
	Иначе		
		СтруктураПриПереходе = ЗаданияСервер.ПолучитьСтруктуруПриПереходеЗаданияНаЭтап(ПараметрыСтруктура, НовыйЭтап,
			НеПроверятьПроцесс);
	КонецЕсли;
	
	//Пашков 06.01.21
	ЭтоТикет = СтруктураПриПереходе.ТипПроцесса = ПредопределенноеЗначение("Справочник.ТипыПроцессов.Инцидент");
	ЭтапЗакрыт = СтруктураПриПереходе.СостояниеЭтапа = ПредопределенноеЗначение("Перечисление.СостоянияЭтаповПроцесса.Закрыт");
	ЭтапВыполнен = СтруктураПриПереходе.СостояниеЭтапа = ПредопределенноеЗначение("Перечисление.СостоянияЭтаповПроцесса.Выполнен");
	
	СтруктураВозврата.Вставить("ЭтоТикет", ЭтоТикет);
	СтруктураВозврата.Вставить("ЭтапЗакрыт", ЭтапЗакрыт);
	СтруктураВозврата.Вставить("ЭтапВыполнен", ЭтапВыполнен);
	СтруктураПриПереходе.Вставить("ЭтоТикет", ЭтоТикет);
	СтруктураПриПереходе.Вставить("ЭтапЗакрыт", ЭтапЗакрыт);
	СтруктураПриПереходе.Вставить("ЭтапВыполнен", ЭтапВыполнен);
	
	Если ПроверятьПодчиненныеЗадания И ЭтоТикет И (ЭтапЗакрыт ИЛИ ЭтапВыполнен) Тогда
		
		СтруктураПодчиненныхЗаданий = ЗаданияСервер.ЕстьНезакрытыеПодчиненныеЗадания(ДокументСсылка, Неопределено);
		Если СтруктураПодчиненныхЗаданий.ЕстьНезакрытыеПодчиненныеЗадания Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(
				НСтр("ru = 'Невозможно закрыть задание, т.к. найдены незакрытые задания подчиненные текущему! %1 '"), СтруктураПодчиненныхЗаданий.Сообщение));
				
			Возврат СтруктураВозврата;	
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураПриПереходе = Неопределено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Этап <%1> не найден'"), НовыйЭтап));
		Возврат СтруктураВозврата;	
	КонецЕсли;
	
	Если ВвестиКомментарийПриПереходеНаЭтап = Истина И СтруктураПриПереходе.ЗапрашиватьКомментарий = 0 Тогда
		СтруктураПриПереходе.ЗапрашиватьКомментарий = 1;
	КонецЕсли;
	
	СтруктураПриПереходе.Вставить("Объект", 							ДокументЗадание);
	СтруктураПриПереходе.Вставить("ДокументСсылка",						ДокументСсылка);
	СтруктураПриПереходе.Вставить("ПолнаяОбработка", 					ПереданаСсылка);
	СтруктураПриПереходе.Вставить("НовыйЭтап", 							НовыйЭтап);
	СтруктураПриПереходе.Вставить("НеПроверятьПроцесс", 				НеПроверятьПроцесс);
	СтруктураПриПереходе.Вставить("ДатаАктуальности",					ДатаАктуальности);
	СтруктураПриПереходе.Вставить("ЭтоВебКлиент",						ЭтоВебКлиент);
	СтруктураПриПереходе.Вставить("Источник", 							Источник);
	СтруктураПриПереходе.Вставить("ВвестиКомментарийПриПереходеНаЭтап", ВвестиКомментарийПриПереходеНаЭтап);
	СтруктураПриПереходе.Вставить("ФормаПереводаНаЭтап", 				ЭтоФормаПереводаНаЭтап);
	
	ЗапрашиватьКомментарий = СтруктураПриПереходе.ЗапрашиватьКомментарий;
	Если ЗапрашиватьКомментарий = 1 ИЛИ ЗапрашиватьКомментарий = 2 Тогда
		
		ПараметрыКомментария = Новый Структура;
		ПараметрыКомментария.Вставить("СсылкаНаОбъект",					ДокументСсылка);
		ПараметрыКомментария.Вставить("Источник", 						Источник);
		// Не закрывать с пустым комментарием.
		ПараметрыКомментария.Вставить("ОбязательноеЗаполнениеКомментария",(ЗапрашиватьКомментарий = 2));
		ПараметрыКомментария.Вставить("ПриватныйКомментарий", 				Ложь);
		ПараметрыКомментария.Вставить("ДополнительныйТекст", 			СтрШаблон(НСтр("ru = 'Смена этапа: %1 &rarr; %2'"),
			СтруктураПриПереходе.НаименованиеТекущегоЭтапа, СтруктураПриПереходе.НаименованиеЭтапа));
		ПараметрыКомментария.Вставить("ЗаписыватьДокументОснование",	ПараметрыСтруктура.ЗаписатьОбъект);
		ПараметрыКомментария.Вставить("ПеревестиНаЭтапПослеДобавленияКомментария", Истина);
		ПараметрыКомментария.Вставить("СтруктураПриПереходе",			СтруктураПриПереходе);
		
		ОписаниеОповещения  = Новый ОписаниеОповещения("ПеревестиЗаданиеНаЭтапЗавершение", ЭтотОбъект, СтруктураПриПереходе);
		ЗначенияЗаполнения	= Новый Структура;
		ЗначенияЗаполнения.Вставить("ВладелецКомментария" , ДокументСсылка);
		ЗначенияЗаполнения.Вставить("Автор"				  , ПользователиКлиент.ТекущийПользователь());		
		ПараметрыКомментария.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		ПараметрыКомментария.Вставить("КомментарийПриПереходеНаЭтап", Истина);
		
		ОткрытьФорму("Справочник.Комментарии.Форма.ФормаРедактирования", ПараметрыКомментария,,,,, ОписаниеОповещения, 
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);				
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Если ПереданаСсылка Тогда
		Если ПараметрыСтруктура.ЗаписатьОбъект Тогда
			ВыполненПеревод = ЗаданияСервер.ПеревестиЗаданиеНаЭтапНаСервере(ДокументЗадание, НовыйЭтап, СтруктураПриПереходе, 
				ДатаАктуальности);
			СтруктураВозврата.Вставить("ВыполненПеревод", ВыполненПеревод);
			
			Возврат СтруктураВозврата;
			
		Иначе 
			СтруктураПриПереходе.Вставить("ВыполненПеревод", Истина);
			
			Возврат СтруктураПриПереходе;
				
		КонецЕсли;	
	ИначеЕсли ЭтоФормаПереводаНаЭтап Тогда
		СтруктураПриПереходе.Вставить("ВыполненПеревод", Истина);
		
		Возврат СтруктураПриПереходе;
		
	Иначе	
		ДокументЗадание.ТекущийЭтап = НовыйЭтап;		
		Если СтруктураПриПереходе.Свойство("ИсполнительПоУмолчанию") 
			И ЗначениеЗаполнено(СтруктураПриПереходе.ИсполнительПоУмолчанию) Тогда
			ДокументЗадание.ТекущийИсполнитель = СтруктураПриПереходе.ИсполнительПоУмолчанию;
		КонецЕсли;			
		СтруктураВозврата.Вставить("ВыполненПеревод", Истина);
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
КонецФункции

