
&НаКлиенте
Процедура РСК_ПриОткрытииВместо(Отказ)
	Если ВладелецФормы = Неопределено Тогда
		УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	Иначе
		УникальныйИдентификаторХранилища = ВладелецФормы.УникальныйИдентификатор; 		
		//++ Горохов 02.03.21
		Если ВладелецФормы.ИмяФормы = "ВнешняяОбработка.ПФ_ОтчетКлиенту.Форма.Форма" Тогда
			АдресХранилищаЭлПисьмо = ПоместитьВоВременноеХранилище(ВладелецФормы.Документ, Новый УникальныйИдентификатор);	
		КонецЕсли;
		//++
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НастройкиФорматаСохранения) Тогда
		Отказ = Истина; // отказ от открытия формы
		СохранитьПечатнуюФормуВФайл();
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПослеОткрытия", 0.1, Истина);
КонецПроцедуры

&НаСервере
&Вместо("ПоместитьТабличныеДокументыВоВременноеХранилище")
Функция РСК_ПоместитьТабличныеДокументыВоВременноеХранилище(ПереданныеНастройки)
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	НастройкиСохранения = НастройкиСохранения();
	ЗаполнитьЗначенияСвойств(НастройкиСохранения, ПереданныеНастройки);
	
	Результат = Новый Массив;
	
	// подготовка архива
	Если НастройкиСохранения.УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	
	ВыбранныеФорматыСохранения = НастройкиСохранения.ФорматыСохранения;
	ПереводитьИменаФайловВТранслит = НастройкиСохранения.ПереводитьИменаФайловВТранслит;
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	ОбработанныеПечатныеФормы = Новый Массив;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если НЕ ПустаяСтрока(НастройкаПечатнойФормы.ОфисныеДокументы) Тогда
			
			ФайлыОфисныхДокументов = ОбщегоНазначения.ЗначениеИзСтрокиXML(НастройкаПечатнойФормы.ОфисныеДокументы);
			
			Для Каждого ФайлОфисногоДокумента Из ФайлыОфисныхДокументов Цикл
				ИмяФайла = УправлениеПечатью.ИмяФайлаОфисногоДокумента(ФайлОфисногоДокумента.Значение);
				Если ЗаписьZipФайла <> Неопределено Тогда 
					ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) 
						+ ИмяФайла);
					ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлОфисногоДокумента.Ключ); // ДвоичныеДанные - 
					ДвоичныеДанные.Записать(ПолноеИмяФайла);
					ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
				Иначе
					ОписаниеФайла = Новый Структура;
					ОписаниеФайла.Вставить("Представление", ИмяФайла);
					ОписаниеФайла.Вставить("АдресВоВременномХранилище", ФайлОфисногоДокумента.Ключ);
					ОписаниеФайла.Вставить("ЭтоОфисныйДокумент", Истина);
					Результат.Добавить(ОписаниеФайла);
				КонецЕсли;
				
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		Если ОбработанныеПечатныеФормы.Найти(ПечатнаяФорма) = Неопределено Тогда
			ОбработанныеПечатныеФормы.Добавить(ПечатнаяФорма);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ВычислитьИспользованиеВывода(ПечатнаяФорма) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.Защита Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.ВысотаТаблицы = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатныеФормыПоОбъектам = УправлениеПечатью.ПечатныеФормыПоОбъектам(ПечатнаяФорма, ОбъектыПечати);
		Для Каждого СоответствиеОбъектаПечатнойФорме Из ПечатныеФормыПоОбъектам Цикл
			ОбъектПечати = СоответствиеОбъектаПечатнойФорме.Ключ;
			ПечатнаяФорма = СоответствиеОбъектаПечатнойФорме.Значение;
			
			Для Каждого ВыбранныйФормат Из ВыбранныеФорматыСохранения Цикл
				ТипФайла = ТипФайлаТабличногоДокумента[ВыбранныйФормат];
				НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
				ЗаданныеИменаПечатныхФорм = ОбщегоНазначения.ЗначениеИзСтрокиXML(НастройкаПечатнойФормы.ИмяФайлаПечатнойФормы);
				
				ИмяФайла = УправлениеПечатью.ИмяФайлаПечатнойФормыОбъекта(ОбъектПечати, ЗаданныеИменаПечатныхФорм, НастройкаПечатнойФормы.Название);
				ИмяФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла);
				
				Если ПереводитьИменаФайловВТранслит Тогда
					ИмяФайла = СтроковыеФункции.СтрокаЛатиницей(ИмяФайла);
				КонецЕсли;
				
				ИмяФайла = ИмяФайла + "." + НастройкиФормата.Расширение;
				
				ПолноеИмяФайла = УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
				ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайла);
				
				Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
					УправлениеПечатью.ВставитьКартинкиВHTML(ПолноеИмяФайла);
				КонецЕсли;
				
				Если ЗаписьZipФайла <> Неопределено Тогда 
					ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
				Иначе
					ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
					ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
					ОписаниеФайла = Новый Структура;
					ОписаниеФайла.Вставить("Представление", ИмяФайла);
					ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
					Если ТипФайла = ТипФайлаТабличногоДокумента.ANSITXT Тогда
						ОписаниеФайла.Вставить("Кодировка", "windows-1251");
					КонецЕсли;
					Результат.Добавить(ОписаниеФайла);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	
		
	// Если архив подготовлен, записываем и помещаем его во временное хранилище.
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление", ПолучитьИмяФайлаДляАрхива(ПереводитьИменаФайловВТранслит));
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		Результат.Добавить(ОписаниеФайла);
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	Если ЗначениеЗаполнено(ИмяАрхива) Тогда
		УдалитьФайлы(ИмяАрхива);
		
	КонецЕсли;
	
	//++ Горохов 02.03.21
	Если ЗначениеЗаполнено(АдресХранилищаЭлПисьмо) тогда
		Результат.Добавить(АдресХранилищаЭлПисьмо);	
	КонецЕсли;
	//++
	
	Возврат Результат;
КонецФункции

&НаСервере
&Вместо("ПараметрыОтправкиПисьма")
Функция РСК_ПараметрыОтправкиПисьма(ВыбранныеПараметры)
	СписокВложений = ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранныеПараметры);
	
	// Контроль уникальности имен.
	ШаблонИмениФайла = "%1%2.%3";
	ИспользованныеИменаФайлов = Новый Соответствие;
	Для Каждого Вложение Из СписокВложений Цикл
		
		//++ Горохов 02.03.21
		Если НЕ ТипЗнч(Вложение) = Тип("Структура") тогда
			Продолжить;	
		КонецЕсли;
		//++
		
		ИмяФайла = Вложение.Представление;
		НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяФайла] <> Неопределено,
			ИспользованныеИменаФайлов[ИмяФайла] + 1, 1);
		ИспользованныеИменаФайлов.Вставить(ИмяФайла, НомерИспользования);
		Если НомерИспользования > 1 Тогда
			Файл = Новый Файл(ИмяФайла);
			ИмяФайла = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла,
				Файл.ИмяБезРасширения, " (" + НомерИспользования + ")", Файл.Расширение);
		КонецЕсли;
		Вложение.Представление = ИмяФайла;
	КонецЦикла;
	
	Получатели = ПараметрыВывода.ПараметрыОтправки.Получатель;
	Если ВыбранныеПараметры.Свойство("Получатели") Тогда
		Получатели = ВыбранныеПараметры.Получатели;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Получатель", Получатели);
	Результат.Вставить("Тема", ПараметрыВывода.ПараметрыОтправки.Тема);
	Результат.Вставить("Текст", ПараметрыВывода.ПараметрыОтправки.Текст);
	Результат.Вставить("Вложения", СписокВложений);
	Результат.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	ПечатныеФормы = Новый ТаблицаЗначений;
	ПечатныеФормы.Колонки.Добавить("Название");
	ПечатныеФормы.Колонки.Добавить("ТабличныйДокумент");
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		Если ПечатныеФормы.НайтиСтроки(Новый Структура("ТабличныйДокумент", ТабличныйДокумент)).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВычислитьИспользованиеВывода(ТабличныйДокумент) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТабличныйДокумент.Защита Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТабличныйДокумент.ВысотаТаблицы = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПечатнойФормы = ПечатныеФормы.Добавить();
		ОписаниеПечатнойФормы.Название = НастройкаПечатнойФормы.Название;
		ОписаниеПечатнойФормы.ТабличныйДокумент = ТабличныйДокумент;
	КонецЦикла;
	
	СписокОбъектов = Параметры.ПараметрКоманды;
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(Параметры.ПараметрКоманды) Тогда
		СписокОбъектов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.ПараметрКоманды);
	КонецЕсли;
	
	ИнтеграцияПодсистемБСП.ПередОтправкойПоПочте(Результат, ПараметрыВывода, СписокОбъектов, ПечатныеФормы);
	УправлениеПечатьюПереопределяемый.ПередОтправкойПоПочте(Результат, ПараметрыВывода, СписокОбъектов, ПечатныеФормы);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
&Вместо("СохранитьПечатныеФормыВПапку")
Процедура РСК_СохранитьПечатныеФормыВПапку(СписокФайловВоВременномХранилище, Знач Папка)
		
	#Если ВебКлиент Тогда
		Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
			//++Горохов 05.03.21
			Если ТипЗнч(ФайлДляЗаписи) = Тип("Строка") тогда
				Продолжить;	
			КонецЕсли;
			//++
			ПолучитьФайл(ФайлДляЗаписи.АдресВоВременномХранилище, ФайлДляЗаписи.Представление);
		КонецЦикла;
		Возврат;
	#КонецЕсли
	
	Папка = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Папка);
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		//++Горохов 05.03.21
		Если ТипЗнч(ФайлДляЗаписи) = Тип("Строка") тогда
			Продолжить;	
		КонецЕсли;
		//++
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.АдресВоВременномХранилище); // ДвоичныеДанные - 
		ДвоичныеДанные.Записать(УникальноеИмяФайла(Папка + ФайлДляЗаписи.Представление));
	КонецЦикла;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Сохранение успешно завершено'"), "file:///" + Папка, НСтр("ru = 'в папку:'") + " " + Папка, БиблиотекаКартинок.Информация32);

КонецПроцедуры
