
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура РСК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ОбновитьДоступностьРеквизитов();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	
	//Пашков
	ТолькоНезакрытыеЗадания = Истина;
	ОбращенияКлиента.Параметры.УстановитьЗначениеПараметра("ТолькоНезакрытыеЗадания", ТолькоНезакрытыеЗадания);
	ЗакрытыеСостоянияЭтапа = Новый Массив;
	ЗакрытыеСостоянияЭтапа.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияЭтаповПроцесса.Закрыт"));
	ОбращенияКлиента.Параметры.УстановитьЗначениеПараметра("ЗакрытыеСостоянияЭтапа", ЗакрытыеСостоянияЭтапа);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РСК_ПроектПриИзмененииПосле(Элемент)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ОбновитьСвязанныеРеквизиты();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
Процедура РСК_ПроектНачалоВыбораВместо(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура;
	Если ЗначениеЗаполнено(Клиент) И ТипЗнч(Клиент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Клиент", Клиент);
		
		СтруктураПараметров.Вставить("Отбор", ПараметрыОтбора);
	КонецЕсли;
	ОткрытьФорму("Справочник.Проекты.ФормаВыбора", СтруктураПараметров, Элемент);
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
Процедура РСК_КлиентПриИзмененииПосле(Элемент)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ОбновитьСвязанныеРеквизиты();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
Процедура РСК_ИнициаторПриИзмененииПосле(Элемент)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ОбновитьСвязанныеРеквизиты();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
Процедура РСК_ИнициаторНачалоВыбораВместо(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура;
	Если ЗначениеЗаполнено(Клиент) И ТипЗнч(Клиент) = Тип("СправочникСсылка.Контрагенты") Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Владелец", Клиент);
		 		
		СтруктураПараметров.Вставить("Отбор", ПараметрыОтбора);
	КонецЕсли;
	ОткрытьФорму("Справочник.КонтактныеЛица.ФормаВыбора", СтруктураПараметров, Элемент);
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
Процедура РСК_ИнициаторОбработкаВыбораПосле(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ОбновитьСвязанныеРеквизиты();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура РСК_ПерейтиКВместо(Команда)
	
	Если Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаПоиск Тогда
		Элементы.СтраницыМастера.ТекущаяСтраница 	= Элементы.СтраницаПринятьОбращение;
		ПриОткрытииСтраницыОбращения();
	Иначе
		СоздатьНовоеЗадание();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовоеЗадание()
	
	ФормаЗадания 					= ОткрытьФорму("Документ.Задание.Форма.ФормаДокумента",,
	ЭтаФорма, Новый УникальныйИдентификатор);
	ФормаЗадания.Объект.Сервис		= Сервис; 
	ФормаЗадания.Объект.Услуга		= Услуга;
	ФормаЗадания.Объект.Процесс		= Процесс;
	ФормаЗадания.Объект.Проект     	= Проект;
	ФормаЗадания.Объект.Инициатор	= Инициатор;
	ФормаЗадания.Объект.Клиент      = Клиент;
	ФормаЗадания.Объект.Тема        = Тема;
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Если ЗначениеЗаполнено(Исполнитель) Тогда 
		ФормаЗадания.Объект.ТекущийИсполнитель = Исполнитель;
		ФормаЗадания.ОбновитьВыборИсполнителя();
		ФормаЗадания.ОбновитьДоступностьРедактирования();
	КонецЕсли;
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	ФормаЗадания.Объект.ТекущийЭтап = ПредопределенноеЗначение("Справочник.ЭтапыПроцессов.Новый");
	
	//Пашков - задача 111
	Если ЭтоПовторныйЗвонок Тогда
		
		Если ВыбранноеЗадание <> Неопределено Тогда 
			НовОснование = ФормаЗадания.Объект.Основания.Добавить();
			НовОснование.Основание = ВыбранноеЗадание;
		КонецЕсли;
		
		ФормаЗадания.Объект.Процесс = ПолучитьПроцессПерезвонить();
	КонецЕсли;
	
	ФормаЗадания.МодифицированностьОписаниеФорматированныйДокумент = Истина;
	ФормаЗадания.ОписаниеФорматированныйДокумент = ОписаниеФорматированныйДокумент;
	ФормаЗадания.ОбновитьПереводНаЭтапы();
	ФормаЗадания.Открыть();
	
	Тема	= "";
	Сервис	= ПредопределенноеЗначение("Справочник.Сервисы.ПустаяСсылка");
	Услуга	= ПредопределенноеЗначение("Справочник.Услуги.ПустаяСсылка");
	Проект	= ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
	ОписаниеФорматированныйДокумент = ОчиститьФорматированныйДокумент();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПроцессПерезвонить()
	
	Свойство = УправлениеСвойствами.ПолучитьСвойствоПоИмени("ДляРазработчика");
	Значение = "Процесс_Перезвонить";
	
	Возврат УправлениеСвойствами.ПолучитьОбъектПоЗачениюСвойства(Свойство, Значение);
	
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеРеквизитовОбъектаНаСервереБезКонтекста(Объект, Реквизиты)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, Реквизиты);
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПроектКлиентаНаСервереБезКонтекста(Клиент)
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Проекты.Ссылка КАК Проект
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	НЕ Проекты.ПометкаУдаления
		|	И Проекты.Клиент = &Клиент");
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	
	Проекты = Запрос.Выполнить().Выгрузить();
	
	Если Проекты.Количество() <> 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Проекты[0].Проект;
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецФункции

&НаКлиенте
Процедура РСК_ТолькоНезакрытыеЗаданияПриИзмененииВместо(Элемент)
	ОбращенияКлиента.Параметры.УстановитьЗначениеПараметра("ТолькоНезакрытыеЗадания", ТолькоНезакрытыеЗадания);
КонецПроцедуры

&НаКлиенте
Процедура РСК_СтраницыМастераПриСменеСтраницыВместо(Элемент, ТекущаяСтраница)
	
	Элементы.ПерейтиК.Доступность = Истина;
	
	Если Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаПоиск Тогда
		ПриОткрытииСтраницыПоиска();
	ИначеЕсли Элементы.СтраницыМастера.ТекущаяСтраница = Элементы.СтраницаПринятьОбращение Тогда
		ПриОткрытииСтраницыОбращения();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступностьРеквизитов()
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Элементы.Проект.ТолькоПросмотр = Не ЗначениеЗаполнено(Клиент);
	Элементы.Инициатор.ТолькоПросмотр = Элементы.Проект.ТолькоПросмотр Или Не ЗначениеЗаполнено(Проект);
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвязанныеРеквизиты()
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Если ЗначениеЗаполнено(Клиент) Тогда
		Если ЗначениеЗаполнено(Инициатор) И Клиент <> Инициатор.Владелец Тогда
			Инициатор = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проект) И Клиент <> Проект.Клиент Тогда
			Проект = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Инициатор) Тогда
			Клиент = Инициатор.Владелец;
		КонецЕсли;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Клиент) Тогда
		Если Не ЗначениеЗаполнено(Проект) Тогда
			ПроектКлиента = ПолучитьПроектКлиентаНаСервереБезКонтекста(Клиент);
			Если ПроектКлиента <> Неопределено Тогда
				Проект = ПроектКлиента;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		РеквизитыПроекта = ПолучитьЗначениеРеквизитовОбъектаНаСервереБезКонтекста(Проект, "Инициатор, ОтветственныйЗаПроект");
		Если Не ЗначениеЗаполнено(Исполнитель)
			И ЗначениеЗаполнено(РеквизитыПроекта.ОтветственныйЗаПроект) 
			И ТипЗнч(РеквизитыПроекта.ОтветственныйЗаПроект) = Тип("СправочникСсылка.Пользователи")
			И РеквизитыПроекта.ОтветственныйЗаПроект <> Исполнитель Тогда
			
			Исполнитель = РеквизитыПроекта.ОтветственныйЗаПроект;
		КонецЕсли;
		Если ЗначениеЗаполнено(РеквизитыПроекта.Инициатор)
			И Не ЗначениеЗаполнено(Инициатор) Тогда
			
			Инициатор = РеквизитыПроекта.Инициатор;
			Элементы.Клиент.ОграничениеТипа = ЗаданияСервер.ДопустимыеТипыКлиентаИнициатора(Инициатор);
		КонецЕсли;
	КонецЕсли;	

	ОбновитьДоступностьРеквизитов();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
КонецПроцедуры

&НаКлиенте
&Вместо("ОбновитьДанныеПоАктивнойСтроке")
Процедура РСК_ОбновитьДанныеПоАктивнойСтроке()
	
	Если Элементы.СтраницыМастера.ТекущаяСтраница.Имя = "СтраницаПоиск" Тогда
		ТекДанные = Элементы.ДеревоПоиска.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда 
			мСсылка = ТекДанные.Ссылка;
			ОбращенияКлиента.Параметры.УстановитьЗначениеПараметра("Клиент", мСсылка);
			Если ТипЗнч(мСсылка) = Тип("СправочникСсылка.КонтактныеЛица") Тогда 
				Владелец	= ПолучитьВладельцаНаСервере(мСсылка);
				Инициатор	= мСсылка;
				Клиент		= ?(ЗначениеЗаполнено(Владелец), Владелец, мСсылка);
			Иначе
				Инициатор	= мСсылка;
				Клиент		= мСсылка;
			КонецЕсли;
			//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
			ОбновитьСвязанныеРеквизиты();
			//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
			Процесс			= УправлениеITОтделом8УФПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(
				ПользователиКлиент.ТекущийПользователь(), "ОсновнойПроцесс");
            Если НЕ ЗначениеЗаполнено(Процесс) Тогда
            	Процесс = ПредопределенноеЗначение("Справочник.Процессы.Обращение");
            КонецЕсли; 
			ЗаполнитьПанельИнформацииПоДанным(Элементы.ДеревоПоиска.ТекущиеДанные.Ссылка); 
		Иначе
			ЗаполнитьПанельИнформацииПоДанным(Неопределено);
		КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РСК_ЗаполнитьПоЗаданиюВместоНаСервере()
	
	ТекущаяСтрока = Элементы.ОбращенияКлиента.ТекущаяСтрока;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущаяСтрока);
	Исполнитель = ТекущаяСтрока.ТекущийИсполнитель;
	Тема = Тема + " (Перезвонить)";
	Процесс = ПолучитьПроцессПерезвонить();
	
	СтруктураВложений = Новый Структура;
	Текст = РаботаСHTML.ОбработатьТекстHTMLДляФорматированногоДокумента(ТекущаяСтрока, ТекущаяСтрока.ТекстHTML,
	СтруктураВложений);
	ОписаниеФорматированныйДокумент.УстановитьHTML(СокрЛП(Текст), СтруктураВложений);
	
	ВыбранноеЗадание = ТекущаяСтрока;
	
КонецПроцедуры

//Пашков - Задача 111
&НаКлиенте
Процедура РСК_ЗаполнитьПоЗаданиюВместо(Команда)
	
	Если Не ЗначениеЗаполнено(Элементы.ОбращенияКлиента.ТекущаяСтрока) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Не выбрано задание '"));
		Возврат;
	КонецЕсли;
	
	РСК_ЗаполнитьПоЗаданиюВместоНаСервере();
	
	Элементы.СтраницыМастера.ТекущаяСтраница 	= Элементы.СтраницаПринятьОбращение;
	Элементы.ПерейтиК.Заголовок 				= НСтр("ru = 'Принять повторный звонок'");
	ТекущийЭлемент 								= Элементы.Тема;
	Элементы.ЗаполнитьПоЗаданию.Видимость = Ложь;
	
	ЭтоПовторныйЗвонок = Истина;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПриОткрытииСтраницыПоиска()
	
	Элементы.ПерейтиК.Заголовок = НСтр("ru = 'Принять обращение'");	
	
	//Пашков - Задача 111
	Элементы.ЗаполнитьПоЗаданию.Видимость = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииСтраницыОбращения()
	
	Элементы.ПерейтиК.Заголовок = НСтр("ru = 'Зарегистрировать новое обращение'");
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	Если Не ЗначениеЗаполнено(Проект) Тогда
		СтруктураПараметров = Новый Структура;
		Если ЗначениеЗаполнено(Клиент) И ТипЗнч(Клиент) = Тип("СправочникСсылка.Контрагенты") Тогда
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Клиент", Клиент);
			
			СтруктураПараметров.Вставить("Отбор", ПараметрыОтбора);
		КонецЕсли;
		ОткрытьФорму("Справочник.Проекты.ФормаВыбора", СтруктураПараметров, Элементы.Проект);
	КонецЕсли;
	ОбновитьДоступностьРеквизитов();
	//++РС Консалт: Минаков А.С. 06.01.2020 Задача 121
	
	//Пашков - Задача 111
	ЭтоПовторныйЗвонок = Ложь;
	ВыбранноеЗадание = ПредопределенноеЗначение("Документ.Задание.ПустаяСсылка");
	Процесс = ПредопределенноеЗначение("Справочник.Процессы.Обращение");
	Элементы.ЗаполнитьПоЗаданию.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
&Вместо("ИзменитьПараметрыПоиска")
Процедура РСК_ИзменитьПараметрыПоиска(ЭлементИмя, ЭлементЗначение, Использование, ПриОткрытии)
	
	Если ЗначениеЗаполнено(ЭлементИмя) Тогда
		ЭтотОбъект[ЭлементИмя] = СокрЛП(ЭлементЗначение);
	КонецЕсли;
	
	Если (НЕ ЗначениеЗаполнено(ПоискКлиентНаименование) И НЕ ЗначениеЗаполнено(ПоискКлиентТелефон) 
			И НЕ ЗначениеЗаполнено(ПоискКлиентEmail) И НЕ ЗначениеЗаполнено(ПоискКлиентИНН))  Тогда
		ДеревоПоиска.ПолучитьЭлементы().Очистить();
		ОбращенияКлиента.Параметры.УстановитьЗначениеПараметра("Клиент", Неопределено);
		Элементы.ПерейтиК.Доступность = Ложь;
		
		//Пашков - Задание 111
		Элементы.ЗаполнитьПоЗаданию.Доступность = Ложь;
		
		Элементы.СтраницаПринятьОбращение.Видимость = Ложь;
		Элементы.ПерейтиК.Заголовок = НСтр("ru = 'Принять обращение'");
		Возврат;
	Иначе
		Элементы.ГруппаВыполняетсяПоиск.Видимость = Истина;
		ПодключитьОбработчикОжидания("ВыполнитьПоиск", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&Вместо("ВыполнитьПоиск")
Процедура РСК_ВыполнитьПоиск()
	
	Элементы.ГруппаВыполняетсяПоиск.Видимость = Истина;	
	
	СформироватьДанныеПоПоиску();
	
	Если КоличествоНайденныхКлиентов > 0 Тогда 
		Элементы.ПерейтиК.Доступность				= Истина;
		
		//Пашков - Задание 111
		Элементы.ЗаполнитьПоЗаданию.Доступность = Истина;
		
		Элементы.СтраницаПринятьОбращение.Видимость	= Истина;
	КонецЕсли;
	
	Элементы.ГруппаВыполняетсяПоиск.Видимость = Ложь;
	
КонецПроцедуры




