
&НаСервере
Процедура СформироватьТаблицуНаСервере()
	ТаблицаУРВ.Очистить();
	ВысотаОбласти = ТабДок.ВысотаТаблицы;
	ШиринаОбласти = ТабДок.ШиринаСтраницы;
	
	СчВысота = 1;
	СчШирина = 1;
	
	ПоследняяГруппировка = "";
	ПоследнийИнтервал = "";
	ПоследняяПрограмма = "";
	Пока СчВысота <= ВысотаОбласти Цикл
		
		ГруппировкаИлиИнтервал = ТабДок.Область(СчВысота,1,СчВысота,ШиринаОбласти).Текст;
		
		//Заголовок
		Если СокрЛП(ГруппировкаИлиИнтервал) = "Дата" Тогда
			УвеличитьСчетчик(СчВысота);
			Продолжить;
		КонецЕсли;
		
		ВремяГруппировка =  ТабДок.Область(СчВысота,2,СчВысота,ШиринаОбласти).Текст;
		ПрограммаИлиВремя = ТабДок.Область(СчВысота,3,СчВысота,ШиринаОбласти).Текст;
		Детали = ТабДок.Область(СчВысота,4,СчВысота,ШиринаОбласти).Текст;
		
		Если ПустаяСтрока(ПрограммаИлиВремя)
			//Пока парсим фиксированно, до первого исключения
			И Сред(ГруппировкаИлиИнтервал,3,2) = ", " 
			Тогда
			ПоследняяГруппировка = ГруппировкаИлиИнтервал;
			УвеличитьСчетчик(СчВысота);
			Продолжить;
		КонецЕсли;
		
		Если Не ПустаяСтрока(ГруппировкаИлиИнтервал) Тогда
			ПоследнийИнтервал = ГруппировкаИлиИнтервал;
		КонецЕсли;
		
		ЭтоНеактивноеВремя = Ложь;
		
		Если ПустаяСтрока(Детали) И НЕ ПустаяСтрока(ВремяГруппировка) Тогда
			Если НЕ ПустаяСтрока(ПрограммаИлиВремя) Тогда
				ПоследняяПрограмма = ПрограммаИлиВремя;
				УвеличитьСчетчик(СчВысота);
				Продолжить;
			ИначеЕсли СтрНайти(ВремяГруппировка,"Неактивное время") <> 0 Тогда
				ПоследняяПрограмма = ВремяГруппировка;
				Детали = ВремяГруппировка;
				ЭтоНеактивноеВремя = Истина;				
			КонецЕсли;
			
		КонецЕсли;
		
		
		ПозицияПредставленияИнтервала = Стрнайти(ПоследнийИнтервал,"(");
		ИнтервалВремени = Лев(ПоследнийИнтервал,ПозицияПредставленияИнтервала-1);
		МассивИнтервалов = СтрРазделить(ИнтервалВремени," - ",Ложь);
		ВремяНачала = МассивИнтервалов[0];
		ВремяОкончания = МассивИнтервалов[1];
		
		ВремяНачала_Разбивка = СтрРазделить(ВремяНачала,":");
		ВремяНачала_Часы = ВремяНачала_Разбивка[0];
		ВремяНачала_Минуты = ВремяНачала_Разбивка[1];
		
		ВремяОкончания_Разбивка = СтрРазделить(ВремяОкончания,":");
		ВремяОкончания_Часы = ВремяОкончания_Разбивка[0];
		ВремяОкончания_Минуты = ВремяОкончания_Разбивка[1];
		
		Если ЭтоНеактивноеВремя Тогда
			СтрВремяМинут = СтрЗаменить(Сред(ПоследнийИнтервал,ПозицияПредставленияИнтервала),"мин","");
			СтрВремяМинут = СтрЗаменить(СтрВремяМинут,"(","");
			СтрВремяМинут = СтрЗаменить(СтрВремяМинут,")","");
			
			СтрИнтервалЧасыМинуты = СтрРазделить(СтрВремяМинут," час ", Ложь);
			
			Если СтрИнтервалЧасыМинуты.Количество() > 1 Тогда
				ВремяМинут = Число(СтрИнтервалЧасыМинуты[0] * 60) + Число(СтрИнтервалЧасыМинуты[1]);
			Иначе
				ВремяМинут = Число(СтрВремяМинут);
			КонецЕсли;
			
			ВремяСекунд = ВремяМинут * 60;	
		Иначе
			ТекВремя = ПрограммаИлиВремя;
			ВремяМинут = 0;
			ВремяСекунд = 0;
			Если СтрНайти(ТекВремя,"мин") <> 0 Тогда
				ВремяМинут = Число(СтрЗаменить(ТекВремя," мин",""));
				ВремяСекунд = ВремяМинут * 60;
			ИначеЕсли СтрНайти(ТекВремя,"сек") <> 0 Тогда
				ВремяСекунд = Число(СтрЗаменить(ТекВремя," сек",""));
				ВремяМинут = ВремяСекунд / 60;
			Иначе
				ВызватьИсключение("Неведомая единица времени в строке " + СчВысота + "!");
			КонецЕсли;
		КонецЕсли;
		
		НовСтр = ТаблицаУРВ.Добавить();
		НовСтр.Группировка = ПоследняяГруппировка;
		НовСтр.Интервал = ПоследнийИнтервал;
		НовСтр.ВремяСек = ВремяСекунд;
		НовСтр.ВремяМин = ВремяМинут;
		НовСтр.Программа = ПоследняяПрограмма;
		НовСтр.Детали = Детали;
		НовСтр.ВремяНачала = Дата(1,1,1,ВремяНачала_Часы,ВремяНачала_Минуты,0);
		НовСтр.ВремяОкончания = Дата(1,1,1,ВремяОкончания_Часы,ВремяОкончания_Минуты,0);
		
		УвеличитьСчетчик(СчВысота);
	КонецЦикла;
	
	Если ТаблицаУРВ.Количество() Тогда
		Сообщить("Таблица успешно сформирована!");
	Иначе
		Сообщить("Не удалось сформировать таблицу!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УвеличитьСчетчик(Сч) 
	Сч = Сч + 1;	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТаблицу(Команда)
	СформироватьТаблицуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	//Если ВладелецФормы = Неопределено Тогда
		//ПринятьНаСервере();
		//Закрыть();
	//Иначе
		АдресХранилища = ПоместитьВХранилищеНаСервере(ВладелецФормы.УникальныйИдентификатор);
		Закрыть(АдресХранилища);
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПринятьНаСервере()
	Отчет.ТаблицаУРВ.Очистить();
	Для Каждого Стр Из ТаблицаУРВ Цикл
		ЗаполнитьЗначенияСвойств(Отчет.ТаблицаУРВ.Добавить(),Стр);
	КонецЦикла;
КонецПроцедуры

Функция ПоместитьВХранилищеНаСервере(КлючФормыВладельца)
	Возврат ПоместитьВоВременноеХранилище(ТаблицаУРВ.Выгрузить(),КлючФормыВладельца);	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыбратьФайлОтчета();	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлОтчета()
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Таблица Excel (*.xlsx)|*.xlsx|Таблица Excel (*.xls)|*.xls";
	ДиалогВыбораФайла.Заголовок = "Выберите файл с отчетом BitCop";
	ДиалогВыбораФайла.Показать(Новый ОписаниеОповещения("ВыбратьФайлОтчетаЗавершение",ЭтотОбъект));	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлОтчетаЗавершение(ВыбранныеФайлы, ДопПараметры = Неопределено) Экспорт
	Если ВыбранныеФайлы <> Неопределено Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ПомещениеФайлаНаСерверЗавершение",ЭтотОбъект),,,,
		ВыбранныеФайлы[0],ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаНаСерверЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры = Неопределено) Экспорт
	Попытка
		ПрочитатьФайлНаСервере(ОписаниеПомещенногоФайла.Адрес,ОписаниеПомещенногоФайла.СсылкаНаФайл.Расширение);
		
		Если ТаблицаУРВ.Количество() Тогда
			Принять(Неопределено);
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьФайлНаСервере(АдресВремХранилища, Расширение)
	ИмяВремФайла = ПолучитьИмяВременногоФайла(Расширение);
	ФайлОтчета = ПолучитьИзВременногоХранилища(АдресВремХранилища);
	ФайлОтчета.Записать(ИмяВремФайла);
	ТабДок.Прочитать(ИмяВремФайла,СпособЧтенияЗначенийТабличногоДокумента.Значение);
	СформироватьТаблицуНаСервере();
КонецПроцедуры

