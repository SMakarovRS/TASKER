&НаСервере
Процедура СформироватьТабДокНаСервере()
	ТабДок.Очистить();
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИспользуемоеИмяФайла = "Отчет заказчику: "+Документ.Клиент.НаименованиеПолное+?(ЗначениеЗаполнено(Документ.Проект)," по проекту "+Документ.Проект.Наименование,"") + " по работам, принятым до " +Формат(Документ.Период,"ДФ=dd.MM.yyyy");
	Обработка = РеквизитФормыВЗначение("Объект");
	Макет = Обработка.ПолучитьМакет("Макет");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Ссылка КАК ЗанятостьСсылка,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Исполнитель КАК ЗанятостьИсполнитель,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.ВидРаботы КАК ЗанятостьВидРаботы,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Описание КАК ЗанятостьОписание,
	               |	ВЫБОР
	               |		КОГДА РС_ОтчетКлиентуСписокЗанятостей.КОплате > РС_ОтчетКлиентуСписокЗанятостей.ФактическоеВремя
	               |			ТОГДА РС_ОтчетКлиентуСписокЗанятостей.КОплате
	               |		ИНАЧЕ РС_ОтчетКлиентуСписокЗанятостей.ФактическоеВремя
	               |	КОНЕЦ КАК Факт,
	               |	РС_ОтчетКлиентуСписокЗанятостей.ВремяКлиента КАК ВремяКлиента,
	               |	РС_ОтчетКлиентуСписокЗанятостей.КОплате КАК КОплате,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание.Ссылка КАК Задание,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание.Тема КАК ЗаданиеОписание,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание.ТекущийЭтап КАК ЗаданиеСтатус,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание.Проект КАК Проект,
	               |	РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание.Инициатор КАК ЗаданиеКонтактноеЛицо,
	               |	КОНЕЦПЕРИОДА(РС_ОтчетКлиентуСписокЗанятостей.Занятость.ДатаНачала, МЕСЯЦ) КАК ЗанятостьДата,
	               |	ВЫБОР
	               |		КОГДА РС_ОтчетКлиентуСписокЗанятостей.КОплате > РС_ОтчетКлиентуСписокЗанятостей.ФактическоеВремя
	               |			ТОГДА 0
	               |		ИНАЧЕ РС_ОтчетКлиентуСписокЗанятостей.ФактическоеВремя - РС_ОтчетКлиентуСписокЗанятостей.КОплате
	               |	КОНЕЦ КАК ВремяБесплатно
	               |ИЗ
	               |	Документ.РС_ОтчетКлиенту.СписокЗанятостейЗакрытые КАК РС_ОтчетКлиентуСписокЗанятостей
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РС_ОтчетКлиенту КАК РС_ОтчетКлиенту
	               |		ПО РС_ОтчетКлиентуСписокЗанятостей.Ссылка = РС_ОтчетКлиенту.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Задание КАК Задание
	               |		ПО РС_ОтчетКлиентуСписокЗанятостей.Занятость.Задание = Задание.Ссылка
	               |			И (Задание.ТекущийЭтап.СостояниеЭтапа = ЗНАЧЕНИЕ(Перечисление.СостоянияЭтаповПроцесса.Закрыт))
	               |			И (Задание.ДатаВыполнения <= КОНЕЦПЕРИОДА(&Дата, ДЕНЬ))
	               |ГДЕ
	               |	РС_ОтчетКлиенту.Ссылка = &Документ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Задание.Дата
	               |ИТОГИ
	               |	СУММА(Факт),
	               |	СУММА(КОплате),
	               |	СУММА(ВремяБесплатно)
	               |ПО
	               |	ОБЩИЕ,
	               |	Проект,
	               |	Задание,
	               |	ЗанятостьСсылка";
	Если ПоМесяцам Тогда	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{ПоМесяцам}","ЗанятостьДата,");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{ПоМесяцам}","");
	КонецЕсли;
	Запрос.УстановитьПараметр("Документ",Документ);
	Запрос.УстановитьПараметр("Дата",Документ.Период);
	Запрос.УстановитьПараметр("ВыводитьОписание",ВыводитьОписание);
	Результат = Запрос.Выполнить();
	ИтогФ=0;
	ИтогБ=0;
	ИтогП=0;
	Если ПоМесяцам Тогда
	//	ВыборкаМесяц = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//	Пока ВыборкаМесяц.Следующий() Цикл
	//		ИтогФ=0;
	//		ИтогБ=0;
	//		ИтогП=0;
	//		Проекты = Результат.Выгрузить();
	//		Проекты.Свернуть("Проект");
	//		Проекты = Проекты.ВыгрузитьКолонку("Проект");
	//		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//		ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры,Документ);
	//		//ОбластьЗаголовок.Параметры.Клиент = Документ.Клиент;
	//		ОбластьЗаголовок.Параметры.Период = ВыборкаМесяц.ЗанятостьДата;
	//		ОбластьЗаголовок.Параметры.Исполнитель = "РС Консалт";
	//		ОбластьЗаголовок.Параметры.ПроектСтрока = "";
	//		Для Каждого Проект из Проекты Цикл
	//			Если ОбластьЗаголовок.Параметры.ПроектСтрока <> "" Тогда ОбластьЗаголовок.Параметры.ПроектСтрока = ОбластьЗаголовок.Параметры.ПроектСтрока + ", " КонецЕсли;
	//			ОбластьЗаголовок.Параметры.ПроектСтрока = ОбластьЗаголовок.Параметры.ПроектСтрока + Проект;
	//		КонецЦикла;
	//		ТабДок.Вывести(ОбластьЗаголовок);
	//		
	//		Шапка = Макет.ПолучитьОбласть("Шапка_Основа");
	//		ТабДок.Вывести(Шапка);
	//		//Если ВыводитьИсполнителя Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Исполнитель");ТабДок.Присоединить(Шапка);КонецЕсли;
	//		//Шапка = Макет.ПолучитьОбласть("Шапка_Ссылка");
	//		//ТабДок.Присоединить(Шапка);
	//		Если ВыводитьФакт 		Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Факт");		ТабДок.Присоединить(Шапка);КонецЕсли;
	//		Если ВыводитьБесплатное Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Бесплатно");	ТабДок.Присоединить(Шапка);КонецЕсли;
	//		Если ВыводитьПлатное 	Тогда Шапка = Макет.ПолучитьОбласть("Шапка_КОплате");	ТабДок.Присоединить(Шапка);КонецЕсли;
	//		
	//		Н1=1;
	//		Н2=1;
	//		Н3=1;
	//		ВыборкаПроект=ВыборкаМесяц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//		Пока ВыборкаПроект.Следующий() Цикл
	//			Н2=1;
	//			О_Проект = Макет.ПолучитьОбласть("Проект_Основа");
	//			О_Проект.Параметры.Номер = Н1;
	//			О_Проект.Параметры.Проект = ВыборкаПроект.Проект;
	//			ТабДок.Вывести(О_Проект);
	//			
	//			Если ВыводитьИсполнителя Тогда Область = Макет.ПолучитьОбласть("Исполнитель_Отступ");ТабДок.Присоединить(Область);КонецЕсли;
	//			
	//			Область = Макет.ПолучитьОбласть("Ссылка_Отступ"); ТабДок.Присоединить(Область);
	//			
	//			Если ВыводитьФакт 		Тогда 
	//				Область = Макет.ПолучитьОбласть("Строка_Факт");Область.Параметры.Факт = ВыборкаПроект.Факт;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//			Если ВыводитьБесплатное Тогда 
	//				Область = Макет.ПолучитьОбласть("Строка_Бесплатно");Область.Параметры.Бесплатно = ВыборкаПроект.Факт-ВыборкаПроект.Бесплатно;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//			Если ВыводитьПлатное 	Тогда 
	//				Область = Макет.ПолучитьОбласть("Строка_КОплате");Область.Параметры.КОплате = ВыборкаПроект.КОплате;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//			
	//			ТабДок.НачатьГруппуСтрок();//Группа заданий
	//			ВыборкаЗадание = ВыборкаПроект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//			Пока ВыборкаЗадание.Следующий() Цикл
	//				Н3=1;
	//				О_Задание = Макет.ПолучитьОбласть("Задание_Основа");
	//				О_Задание.Параметры.Номер = ""+Н1+"."+Н2;
	//				ЗаполнитьЗначенияСвойств(О_Задание.Параметры,ВыборкаЗадание);
	//				Если НЕ ВыводитьОписание Тогда
	//					О_Задание.Параметры.ЗаданиеОписание = "";
	//				КонецЕсли;
	//				Поз=СтрНайти(О_Задание.Параметры.Задание,"(");
	//				Если Поз > 1 Тогда О_Задание.Параметры.Задание=Лев(О_Задание.Параметры.Задание,Поз-1) КонецЕсли;
	//				ТабДок.Вывести(О_Задание);
	//				
	//				Если ВыводитьИсполнителя Тогда Область = Макет.ПолучитьОбласть("Исполнитель_Отступ");ТабДок.Присоединить(Область);КонецЕсли;
	//				
	//				Область = Макет.ПолучитьОбласть("Ссылка");
	//				Область.Параметры.Ссылка = ВыборкаЗадание.Задание;
	//				Область.Области.Ссылка.Расшифровка = ВыборкаЗадание.Задание;
	//				ТабДок.Присоединить(Область);
	//				
	//				Если ВыводитьФакт 		Тогда 
	//					Область = Макет.ПолучитьОбласть("Строка_Факт");Область.Параметры.Факт = ?(ВыборкаЗадание.Факт;
	//					ТабДок.Присоединить(Область);
	//				КонецЕсли;
	//				Если ВыводитьБесплатное Тогда 
	//					Область = Макет.ПолучитьОбласть("Строка_Бесплатно");Область.Параметры.Бесплатно = ВыборкаЗадание.Факт-ВыборкаЗадание.Бесплатно;
	//					ТабДок.Присоединить(Область);
	//				КонецЕсли;
	//				Если ВыводитьПлатное 	Тогда 
	//					Область = Макет.ПолучитьОбласть("Строка_КОплате");Область.Параметры.КОплате = ВыборкаЗадание.КОплате;
	//					ТабДок.Присоединить(Область);
	//				КонецЕсли;
	//				
	//				ТабДок.НачатьГруппуСтрок(,ВыводитьЗанятости);//Группа занятостей
	//				
	//				Выборка = ВыборкаЗадание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//				Пока Выборка.Следующий() Цикл
	//					О_Занятость = Макет.ПолучитьОбласть("Занятость_Основа");
	//					О_Занятость.Параметры.Номер = ""+Н1+"."+Н2+"."+Н3;Н3=Н3+1;
	//					ЗаполнитьЗначенияСвойств(О_Занятость.Параметры,Выборка);
	//					О_Занятость.Параметры.ЗанятостьКонтактноеЛицо = ВыборкаЗадание.ЗаданиеКонтактноеЛицо;
	//					Если НЕ ВыводитьОписание Тогда
	//						О_Занятость.Параметры.ЗанятостьОписание = "";
	//					КонецЕсли;
	//					ТабДок.Вывести(О_Занятость);
	//					
	//					Если ВыводитьИсполнителя Тогда 
	//						Область = Макет.ПолучитьОбласть("Исполнитель");
	//						Область.Параметры.Исполнитель = Выборка.ЗанятостьИсполнитель;
	//						ТабДок.Присоединить(Область);
	//					КонецЕсли;
	//					
	//					Область = Макет.ПолучитьОбласть("Ссылка");
	//					Область.Параметры.Ссылка = Выборка.ЗанятостьСсылка;
	//					Область.Области.Ссылка.Расшифровка = Выборка.ЗанятостьСсылка;
	//					ТабДок.Присоединить(Область);
	//					
	//					Если ВыводитьФакт 		Тогда 
	//						Область = Макет.ПолучитьОбласть("Строка_Факт");Область.Параметры.Факт = Выборка.Факт;
	//						ТабДок.Присоединить(Область);
	//					КонецЕсли;
	//					Если ВыводитьБесплатное Тогда 
	//						Область = Макет.ПолучитьОбласть("Строка_Бесплатно");Область.Параметры.Бесплатно = Выборка.Факт-Выборка.Бесплатно;
	//						ТабДок.Присоединить(Область);
	//					КонецЕсли;
	//					Если ВыводитьПлатное 	Тогда 
	//						Область = Макет.ПолучитьОбласть("Строка_КОплате");Область.Параметры.КОплате = Выборка.КОплате;
	//						ТабДок.Присоединить(Область);
	//					КонецЕсли;
	//					ИтогФ = ИтогФ + Выборка.Факт;
	//					ИтогБ = ИтогБ + Выборка.Бесплатно;
	//					ИтогП = ИтогП + Выборка.КОплате;
	//				КонецЦикла;
	//				Н2=Н2+1;
	//				ТабДок.ЗакончитьГруппуСтрок();//Группа занятостей
	//			КонецЦикла;
	//			Н1=Н1+1;
	//			ТабДок.ЗакончитьГруппуСтрок();//Группа заданий
	//		КонецЦикла;
	//		Если ВыводитьБесплатное или ВыводитьПлатное или ВыводитьФакт Тогда
	//			Область = Макет.ПолучитьОбласть("Итоги_Основа");ТабДок.Вывести(Область);
	//			Если ВыводитьИсполнителя Тогда Область = Макет.ПолучитьОбласть("Итоги_Исполнитель");ТабДок.Присоединить(Область); КонецЕсли;
	//			Область = Макет.ПолучитьОбласть("Итоги_Ссылка");ТабДок.Присоединить(Область);
	//			Если ВыводитьФакт 		Тогда 
	//				Область = Макет.ПолучитьОбласть("Итог_Факт");Область.Параметры.Факт = ИтогФ;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//			Если ВыводитьБесплатное Тогда 
	//				Область = Макет.ПолучитьОбласть("Итог_Бесплатно");Область.Параметры.Бесплатно = ИтогФ-ИтогБ;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//			Если ВыводитьПлатное 	Тогда 
	//				Область = Макет.ПолучитьОбласть("Итог_КОплате");Область.Параметры.КОплате = ИтогБ;
	//				ТабДок.Присоединить(Область);
	//			КонецЕсли;
	//		КонецЕсли;
	//		Подвал = Макет.ПолучитьОбласть("Подвал");
	//		ТабДок.Вывести(Подвал);
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЦикла;
	Иначе
		Проекты = Результат.Выгрузить();
		Проекты.Свернуть("Проект");
		Проекты = Проекты.ВыгрузитьКолонку("Проект");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры,Документ);
		ОбластьЗаголовок.Параметры.Период = Формат(Документ.Период,"ДФ=dd.MM.yyyy");
		ОбластьЗаголовок.Параметры.Номер =  Документ.Номер;
		ОбластьЗаголовок.Параметры.Клиент = Документ.Клиент.НаименованиеПолное;
		ОбластьЗаголовок.Параметры.Исполнитель = "ИП Макаров Александр Иванович";
		ОбластьЗаголовок.Параметры.ПроектСтрока = "";
		Для Каждого Проект из Проекты Цикл
			Если ОбластьЗаголовок.Параметры.ПроектСтрока <> "" Тогда ОбластьЗаголовок.Параметры.ПроектСтрока = ОбластьЗаголовок.Параметры.ПроектСтрока + ", " КонецЕсли;
			ОбластьЗаголовок.Параметры.ПроектСтрока = ОбластьЗаголовок.Параметры.ПроектСтрока + Проект;
		КонецЦикла;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка = Макет.ПолучитьОбласть("Шапка_Основа");
		ТабДок.Вывести(Шапка);
		//Если ВыводитьИсполнителя Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Исполнитель");ТабДок.Присоединить(Шапка);КонецЕсли;
		//		Шапка = Макет.ПолучитьОбласть("Шапка_Ссылка");
		//		ТабДок.Присоединить(Шапка);
		Если ВыводитьФакт 		Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Факт");		ТабДок.Присоединить(Шапка);КонецЕсли;
		Если ВыводитьБесплатное Тогда Шапка = Макет.ПолучитьОбласть("Шапка_Бесплатно");	ТабДок.Присоединить(Шапка);КонецЕсли;
		Если ВыводитьПлатное 	Тогда Шапка = Макет.ПолучитьОбласть("Шапка_КОплате");	ТабДок.Присоединить(Шапка);КонецЕсли;
		
		Н1=1;
		Н2=1;
		Н3=1;
		ВыборкаОбщие=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаОбщие.Следующий() Цикл
			ВыборкаПроект=ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПроект.Следующий() Цикл
				Н2=1;
				О_Проект = Макет.ПолучитьОбласть("Проект_Основа");
				О_Проект.Параметры.Номер = Н1;
				О_Проект.Параметры.Проект = ВыборкаПроект.Проект;
				ТабДок.Вывести(О_Проект);
				
				Если ВыводитьИсполнителя Тогда 
					//Область = Макет.ПолучитьОбласть("Исполнитель_Отступ"); 
					//ТабДок.Присоединить(Область);
				КонецЕсли;
				
				//Область = Макет.ПолучитьОбласть("Ссылка_Отступ"); 
				//ТабДок.Присоединить(Область);
				
				
				Если ВыводитьФакт 		Тогда 
					Область = Макет.ПолучитьОбласть("Проект_Факт");Область.Параметры.Факт = ВыборкаПроект.Факт;
					ТабДок.Присоединить(Область);
				КонецЕсли;
				Если ВыводитьБесплатное Тогда 
					Область = Макет.ПолучитьОбласть("Проект_Бесплатно");Область.Параметры.Бесплатно = ВыборкаПроект.ВремяБесплатно;
					ТабДок.Присоединить(Область);
				КонецЕсли;
				Если ВыводитьПлатное 	Тогда 
					Область = Макет.ПолучитьОбласть("Проект_КОплате");Область.Параметры.КОплате = ВыборкаПроект.КОплате;
					ТабДок.Присоединить(Область);
				КонецЕсли;
				
				ТабДок.НачатьГруппуСтрок();//Группа заданий
				ВыборкаЗадание = ВыборкаПроект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаЗадание.Следующий() Цикл
					Н3=1;
					О_Задание = Макет.ПолучитьОбласть("Задание_Основа");
					О_Задание.Параметры.Номер = ""+Н1+"."+Н2;
					ЗаполнитьЗначенияСвойств(О_Задание.Параметры,ВыборкаЗадание);
					ДатаЗавершенияЗадачи = ВыборкаЗадание.Задание.ДатаЗавершения;
					ДатаВыполнения = ВыборкаЗадание.Задание.ДатаВыполнения; 
					О_Задание.Параметры.ДатаЗакрытияЗадачи = ?(ДатаЗавершенияЗадачи = Дата(1,1,1),Формат(ДатаВыполнения, "ДФ=dd.MM.yyyy"),Формат(ДатаЗавершенияЗадачи, "ДФ=dd.MM.yyyy"));
					//++
					О_Задание.Параметры.РасшифровкаЗадание = ВыборкаЗадание.Задание;
					//--
					Если НЕ ВыводитьОписание Тогда
						О_Задание.Параметры.ЗаданиеОписание = "";
					КонецЕсли;
					Поз=СтрНайти(О_Задание.Параметры.Задание,"(");
					Если Поз > 1 Тогда О_Задание.Параметры.Задание=Лев(О_Задание.Параметры.Задание,Поз-1) КонецЕсли;
					ТабДок.Вывести(О_Задание);
					
					//				Если ВыводитьИсполнителя Тогда Область = Макет.ПолучитьОбласть("Исполнитель_Отступ");ТабДок.Присоединить(Область);КонецЕсли;
					
					//Область = Макет.ПолучитьОбласть("Ссылка");
					//Область.Параметры.Ссылка = ВыборкаЗадание.Задание;
					//Область.Области.Ссылка.Расшифровка = ВыборкаЗадание.Задание;
					//ТабДок.Присоединить(Область);
					
					Если ВыводитьФакт 		Тогда 
						Область = Макет.ПолучитьОбласть("Задание_Факт");Область.Параметры.Факт =  ВыборкаЗадание.Факт;
						ТабДок.Присоединить(Область);
					КонецЕсли;
					Если ВыводитьБесплатное Тогда 
						Область = Макет.ПолучитьОбласть("Задание_Бесплатно");Область.Параметры.Бесплатно = ВыборкаЗадание.ВремяБесплатно;
						ТабДок.Присоединить(Область);
					КонецЕсли;
					Если ВыводитьПлатное 	Тогда 
						Область = Макет.ПолучитьОбласть("Задание_КОплате");Область.Параметры.КОплате = ВыборкаЗадание.КОплате;
						ТабДок.Присоединить(Область);
					КонецЕсли;
					
					Если НЕ ВыборкаЗадание.Задание.ПечатьБезЗанятостей Тогда
						ТабДок.НачатьГруппуСтрок(,ВыводитьЗанятости);//Группа занятостей
						
						Выборка = ВыборкаЗадание.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока Выборка.Следующий() Цикл
							О_Занятость = Макет.ПолучитьОбласть("Занятость_Основа");
							О_Занятость.Параметры.Номер 	= ""+Н1+"."+Н2+"."+Н3;Н3=Н3+1;
							О_Занятость.Параметры.Дата 		= Выборка.ЗанятостьСсылка.ДатаНачала;
							//О_Занятость.Параметры.Ссылка 	= Выборка.ЗанятостьСсылка;
							//++
							О_Занятость.Параметры.ЗанятостьРасшифровка = Выборка.ЗанятостьСсылка;
							//--
							ЗаполнитьЗначенияСвойств(О_Занятость.Параметры,Выборка);
							//О_Занятость.Параметры.ЗанятостьКонтактноеЛицо = ВыборкаЗадание.ЗаданиеКонтактноеЛицо;
							Если НЕ ВыводитьОписание Тогда
								О_Занятость.Параметры.ЗанятостьОписание = "";
							КонецЕсли;
							Если ВыводитьИсполнителя Тогда 
								О_Занятость.Параметры.Исполнитель = Выборка.ЗанятостьИсполнитель;
							КонецЕсли;
							
							ТабДок.Вывести(О_Занятость);
							
							
							//Область = Макет.ПолучитьОбласть("Ссылка");
							//Область.Параметры.Ссылка = Выборка.ЗанятостьСсылка;
							//Область.Области.Ссылка.Расшифровка = Выборка.ЗанятостьСсылка;
							//ТабДок.Присоединить(Область);

							Если ВыводитьФакт 		Тогда 
								Область = Макет.ПолучитьОбласть("Строка_Факт");Область.Параметры.Факт = Выборка.Факт;
								ТабДок.Присоединить(Область);
							КонецЕсли;
							Если ВыводитьБесплатное Тогда 
								Область = Макет.ПолучитьОбласть("Строка_Бесплатно");Область.Параметры.Бесплатно = Выборка.ВремяБесплатно;
								ТабДок.Присоединить(Область);
							КонецЕсли;
							Если ВыводитьПлатное 	Тогда 
								Область = Макет.ПолучитьОбласть("Строка_КОплате");Область.Параметры.КОплате = Выборка.КОплате;
								ТабДок.Присоединить(Область);
							КонецЕсли;
							//ИтогФ = ИтогФ + Выборка.Факт;
							//ИтогБ = ИтогБ + Выборка.ВремяБесплатно;
							//ИтогП = ИтогП + Выборка.КОплате;
						КонецЦикла;
						
						ТабДок.ЗакончитьГруппуСтрок();//Группа занятостей
					КонецЕсли;
					Н2=Н2+1;
				КонецЦикла;
				
				Н1=Н1+1;
				ТабДок.ЗакончитьГруппуСтрок();//Группа заданий
			КонецЦикла;
			Если ВыводитьБесплатное или ВыводитьПлатное или ВыводитьФакт Тогда
				Область = Макет.ПолучитьОбласть("Итоги_Основа");ТабДок.Вывести(Область);
				//Если ВыводитьИсполнителя Тогда Область = Макет.ПолучитьОбласть("Итоги_Исполнитель");ТабДок.Присоединить(Область); КонецЕсли;
				//Область = Макет.ПолучитьОбласть("Итоги_Ссылка");ТабДок.Присоединить(Область);
				Если ВыводитьФакт 		Тогда 
					Область = Макет.ПолучитьОбласть("Итог_Факт");Область.Параметры.Факт = ВыборкаОбщие.Факт;
					ТабДок.Присоединить(Область);
				КонецЕсли;
				Если ВыводитьБесплатное Тогда 
					Область = Макет.ПолучитьОбласть("Итог_Бесплатно");Область.Параметры.Бесплатно = ВыборкаОбщие.ВремяБесплатно;
					ТабДок.Присоединить(Область);
				КонецЕсли;
				Если ВыводитьПлатное 	Тогда 
					Область = Макет.ПолучитьОбласть("Итог_КОплате");Область.Параметры.КОплате = ВыборкаОбщие.КОплате;
					ТабДок.Присоединить(Область);
				КонецЕсли;
			КонецЕсли;
			Подвал = Макет.ПолучитьОбласть("Подвал");
			ТабДок.Вывести(Подвал);
		КонецЦикла;
	КонецЕсли;
	ТабДок.Автомасштаб=истина;
	ТабДок.ТолькоПросмотр = Истина;
	ИмяФайла = "Отчет заказчику "+Документ.Клиент+" на "+Формат(Документ.Период,"ДФ=dd.MM.yyyy");
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьТабДокНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки(Настройки)
	Настройки.Элементы.Вставить("ВыводитьФакт",			ВыводитьФакт);
	Настройки.Элементы.Вставить("ВыводитьБесплатное",	ВыводитьБесплатное);
	Настройки.Элементы.Вставить("ВыводитьПлатное",		ВыводитьПлатное);
	Настройки.Элементы.Вставить("ВыводитьИсполнителя",	ВыводитьИсполнителя);
	Настройки.Элементы.Вставить("ПоМесяцам",			ПоМесяцам);
	Настройки.Элементы.Вставить("ВыводитьЗанятости",	ВыводитьЗанятости);
	Настройки.Элементы.Вставить("ВыводитьОписание",		ВыводитьОписание);
		
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьНастройки(Настройки)
	ВыводитьФакт=		Настройки.Элементы.Свойство("ВыводитьФакт");
	ВыводитьБесплатное=	Настройки.Элементы.Получить("ВыводитьБесплатное");
	ВыводитьПлатное=	Настройки.Элементы.Получить("ВыводитьПлатное");
	ВыводитьИсполнителя=Настройки.Элементы.Получить("ВыводитьИсполнителя");
	ПоМесяцам=			Настройки.Элементы.Получить("ПоМесяцам");
	ВыводитьЗанятости=	Настройки.Элементы.Получить("ВыводитьЗанятости");
	ВыводитьОписание=	Настройки.Элементы.Элементы("ВыводитьОписание");
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОбработки()
		
	//СтруктураНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
	//	"Обработка.ГрупповоеИзменениеОбъектов",
	//	ВидИзменяемыхОбъектов);
	СтруктураНастроек = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"ОтчетКлиенту",
		"");
	Попытка
		Если СтруктураНастроек <> Неопределено Тогда
			ВыводитьФакт=		СтруктураНастроек.ВыводитьФакт;
			ВыводитьБесплатное=	СтруктураНастроек.ВыводитьБесплатное;
			ВыводитьПлатное=	СтруктураНастроек.ВыводитьПлатное;
			ВыводитьИсполнителя=СтруктураНастроек.ВыводитьИсполнителя;
			ПоМесяцам=			СтруктураНастроек.ПоМесяцам;
			ВыводитьЗанятости=	СтруктураНастроек.ВыводитьЗанятости;
			ВыводитьОписание=	СтруктураНастроек.ВыводитьОписание;

	    КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОбработки()
	
	Если Не ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("ВыводитьФакт"		, ВыводитьФакт);
	СтруктураНастроек.Вставить("ВыводитьБесплатное"	, ВыводитьБесплатное);
	СтруктураНастроек.Вставить("ВыводитьПлатное"	, ВыводитьПлатное);
	СтруктураНастроек.Вставить("ВыводитьИсполнителя", ВыводитьИсполнителя);
	СтруктураНастроек.Вставить("ПоМесяцам" 			, ПоМесяцам);
	СтруктураНастроек.Вставить("ВыводитьЗанятости"	, ВыводитьЗанятости);
	СтруктураНастроек.Вставить("ВыводитьОписание" 	, ВыводитьОписание);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОтчетКлиенту", , СтруктураНастроек);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьНастройкиОбработки();
	Элементы.Документ.Видимость = НЕ Параметры.Свойство("Документ",Документ);
	СформироватьТабДокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Печать(ИдентификаторКоманды, МассивОбъектов) Экспорт
	Параметры1 = Новый Структура;
	Параметры1.Вставить("ИдентификаторКоманды", ИдентификаторКоманды);
	Параметры1.Вставить("Документ", МассивОбъектов[0]);
	ОткрытьФорму("ВнешняяОбработка.ПФ_ОтчетКлиенту.Форма.Форма",Параметры1);
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	Если ДополнительныеПараметры="Ссылка" Тогда ОткрытьЗначение(Элемент) КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	СохранитьНастройкиОбработки();
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.Документ.Видимость Тогда
		ТабДок.Напечатать(Истина);
		Возврат;
	КонецЕсли;
	
	СформироватьТабДокНаСервере();
    КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПФ_MXL_ОтчетКлиенту");    
    КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок; 
    КоллекцияПечатныхФорм[0].Экземпляров=1;
    КоллекцияПечатныхФорм[0].СинонимМакета = ИмяФайла;
    УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
КонецПроцедуры
